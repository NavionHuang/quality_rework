<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lifesense.quality.dao.ISnInfoDao">
    <resultMap id="BaseResultMap" type="com.lifesense.quality.domain.SnInfo">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="sn" jdbcType="VARCHAR" property="sn"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="category" jdbcType="VARCHAR" property="category"/>
        <result column="ymd" jdbcType="VARCHAR" property="ymd"/>
        <result column="product_id" jdbcType="BIGINT" property="productId"/>
        <result column="serial_number" jdbcType="VARCHAR" property="serialNumber"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    sn, type, code, category, ymd, serial_number,product_id,create_time
  </sql>
    <select id="selectByExample" parameterType="com.lifesense.quality.criteria.SnInfoGeneratedCriteria"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from SN_INFO
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.lifesense.quality.criteria.SnInfoGeneratedCriteria">
        delete from SN_INFO
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.lifesense.quality.domain.SnInfo">
        <selectKey keyProperty="id" order="BEFORE" resultType="Long">
            select SN_INFO_SEQ.nextval as Id from dual
        </selectKey>
        insert into SN_INFO (id,sn,product_id, type, code,
        category, ymd, serial_number
        )
        values (#{id,jdbcType=BIGINT},#{sn,jdbcType=VARCHAR}, #{productId,jdbcType=BIGINT},#{type,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
        #{category,jdbcType=VARCHAR}, #{ymd,jdbcType=VARCHAR}, #{serialNumber,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.lifesense.quality.domain.SnInfo" >
        <selectKey keyProperty="id" order="BEFORE" resultType="Long">
            select SN_INFO_SEQ.nextval as Id from dual
        </selectKey>
        insert into SN_INFO
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="sn != null">
                sn,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="category != null">
                category,
            </if>
            <if test="ymd != null">
                ymd,
            </if>
            <if test="serialNumber != null">
                serial_number,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="sn != null">
                #{sn,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                #{category,jdbcType=VARCHAR},
            </if>
            <if test="ymd != null">
                #{ymd,jdbcType=VARCHAR},
            </if>
            <if test="serialNumber != null">
                #{serialNumber,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.lifesense.quality.criteria.SnInfoGeneratedCriteria"
            resultType="java.lang.Long">
        select count(*) from SN_INFO
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update SN_INFO
        <set>
            <if test="record.sn != null">
                sn = #{record.sn,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.code != null">
                code = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.category != null">
                category = #{record.category,jdbcType=VARCHAR},
            </if>
            <if test="record.ymd != null">
                ymd = #{record.ymd,jdbcType=VARCHAR},
            </if>
            <if test="record.serialNumber != null">
                serial_number = #{record.serialNumber,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update SN_INFO
        set sn = #{record.sn,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=VARCHAR},
        code = #{record.code,jdbcType=VARCHAR},
        category = #{record.category,jdbcType=VARCHAR},
        ymd = #{record.ymd,jdbcType=VARCHAR},
        serial_number = #{record.serialNumber,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <select id="count" parameterType="com.lifesense.quality.domain.SnInfo" resultType="java.lang.Integer">
        select count(*)
        from Sn_Info
        <trim prefix="where" prefixOverrides="and | or">
            <if test="record.id != null">
                and sn = #{record.id,jdbcType=VARCHAR}
            </if>
            <if test="record.sn != null">
                and sn = #{record.sn,jdbcType=VARCHAR}
            </if>
            <if test="record.type != null">
                and type = #{record.type,jdbcType=VARCHAR}
            </if>
            <if test="record.code != null">
                and code = #{record.code,jdbcType=VARCHAR}
            </if>
            <if test="record.category != null">
                and category = #{record.category,jdbcType=VARCHAR}
            </if>
            <if test="record.ymd != null">
                and ymd = #{record.ymd,jdbcType=VARCHAR}
            </if>
            <if test="record.productId != null">
                and product_id = #{record.productId,jdbcType=BIGINT}
            </if>
            <if test="record.serialNumber != null">
                and serial_number = #{record.serialNumber,jdbcType=VARCHAR}
            </if>
        </trim>
    </select>

    <select id="select" parameterType="com.lifesense.quality.domain.SnInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from Sn_Info
        <trim prefix="where" prefixOverrides="and | or">
            <if test="record.id != null">
                and sn = #{record.id,jdbcType=VARCHAR}
            </if>
            <if test="record.sn != null">
                and sn = #{record.sn,jdbcType=VARCHAR}
            </if>
            <if test="record.type != null">
                and type = #{record.type,jdbcType=VARCHAR}
            </if>
            <if test="record.code != null">
                and code = #{record.code,jdbcType=VARCHAR}
            </if>
            <if test="record.category != null">
                and category = #{record.category,jdbcType=VARCHAR}
            </if>
            <if test="record.ymd != null">
                and ymd = #{record.ymd,jdbcType=VARCHAR}
            </if>
            <if test="record.productId != null">
                and product_id = #{record.productId,jdbcType=BIGINT}
            </if>
            <if test="record.serialNumber != null">
                and serial_number = #{record.serialNumber,jdbcType=VARCHAR}
            </if>
        </trim>
    </select>
</mapper>