<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lifesense.quality.dao.IQaUserDao">
    <cache eviction="LRU" flushInterval="600000" size="1024" readOnly="true"/>
    <resultMap id="BaseResultMap" type="com.lifesense.quality.domain.QaUser">
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="PASSWORD" jdbcType="VARCHAR" property="password"/>
        <result column="CODE" jdbcType="VARCHAR" property="code"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="PROCESS_CODE" jdbcType="VARCHAR" property="processCode"/>
        <result column="LINE_CODE" jdbcType="VARCHAR" property="lineCode"/>
        <result column="PROCESS_SIGN" jdbcType="INTEGER" property="processSign"/>
        <result column="VALID" jdbcType="INTEGER" property="valid"/>
        <result column="CREATE_USER_ID" jdbcType="BIGINT" property="createUserId"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    ID, account, PASSWORD, CODE, NAME, PROCESS_CODE, PROCESS_SIGN, VALID, CREATE_USER_ID,LINE_CODE,
    CREATE_TIME, MODIFY_TIME
  </sql>
    <select id="selectByExample" parameterType="com.lifesense.quality.criteria.QaUserGeneratedCriteria"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from QUALITY.QA_USER
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from QUALITY.QA_USER
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="Long">
    delete from QUALITY.QA_USER
    where ID = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.lifesense.quality.criteria.QaUserGeneratedCriteria">
        delete from QUALITY.QA_USER
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.lifesense.quality.domain.QaUser">
        <selectKey keyProperty="id" order="BEFORE" resultType="Long">
            select QUALITY.QA_USER_SEQ.nextval as Id from dual
        </selectKey>
        insert into QUALITY.QA_USER (id,account, PASSWORD, CODE,
        NAME, PROCESS_CODE, PROCESS_SIGN,VALID, CREATE_USER_ID, CREATE_TIME,
        MODIFY_TIME,LINE_CODE)
        values (#{id,jdbcType=BIGINT},#{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
        #{name,jdbcType=VARCHAR}, #{processCode,jdbcType=VARCHAR}, #{processSign,jdbcType=INTEGER},
        #{valid,jdbcType=INTEGER}, #{createUserId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP},
        #{modifyTime,jdbcType=TIMESTAMP}, #{lineCode,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.lifesense.quality.domain.QaUser">
        <selectKey keyProperty="id" order="BEFORE" resultType="Long">
            select QUALITY.QA_USER_SEQ.nextval as Id from dual
        </selectKey>
        insert into QUALITY.QA_USER
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="password != null">
                PASSWORD,
            </if>
            <if test="code != null">
                CODE,
            </if>
            <if test="name != null">
                NAME,
            </if>
            <if test="processCode != null">
                PROCESS_CODE,
            </if>
            <if test="processSign != null">
                PROCESS_SIGN,
            </if>
            <if test="valid != null">
                VALID,
            </if>
            <if test="createUserId != null">
                CREATE_USER_ID,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="modifyTime != null">
                MODIFY_TIME,
            </if>
            <if test="lineCode != null">
                LINE_CODE,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="processCode != null">
                #{processCode,jdbcType=VARCHAR},
            </if>
            <if test="processSign != null">
                #{processSign,jdbcType=INTEGER},
            </if>
            <if test="valid != null">
                #{valid,jdbcType=INTEGER},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lineCode != null">
                #{lineCode,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.lifesense.quality.criteria.QaUserGeneratedCriteria"
            resultType="java.lang.Long">
        select count(*) from QUALITY.QA_USER
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update QUALITY.QA_USER
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.account != null">
                account = #{record.account,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                PASSWORD = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.code != null">
                CODE = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                NAME = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.processCode != null">
                PROCESS_CODE = #{record.processCode,jdbcType=VARCHAR},
            </if>
            <if test="record.processSign != null">
                PROCESS_SIGN = #{record.processSign,jdbcType=INTEGER},
            </if>
            <if test="record.valid != null">
                VALID = #{record.valid,jdbcType=INTEGER},
            </if>
            <if test="record.createUserId != null">
                CREATE_USER_ID = #{record.createUserId,jdbcType=BIGINT},
            </if>
            <if test="record.createTime != null">
                CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.modifyTime != null">
                MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lineCode != null">
                LINE_CODE = #{record.lineCode,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update QUALITY.QA_USER
        set ID = #{record.id,jdbcType=BIGINT},
        account = #{record.account,jdbcType=VARCHAR},
        PASSWORD = #{record.password,jdbcType=VARCHAR},
        CODE = #{record.code,jdbcType=VARCHAR},
        NAME = #{record.name,jdbcType=VARCHAR},
        PROCESS_CODE = #{record.processCode,jdbcType=VARCHAR},
        PROCESS_SIGN = #{record.processSign,jdbcType=INTEGER},
        VALID = #{record.valid,jdbcType=INTEGER},
        CREATE_USER_ID = #{record.createUserId,jdbcType=BIGINT},
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
        MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP},
        LINE_CODE = #{record.lineCode,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.lifesense.quality.domain.QaUser">
        update QUALITY.QA_USER
        <set>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                PASSWORD = #{password,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                CODE = #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="processCode != null">
                PROCESS_CODE = #{processCode,jdbcType=VARCHAR},
            </if>
            <if test="processSign != null">
                PROCESS_SIGN = #{processSign,jdbcType=INTEGER},
            </if>
            <if test="valid != null">
                VALID = #{valid,jdbcType=INTEGER},
            </if>
            <if test="createUserId != null">
                CREATE_USER_ID = #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lineCode != null">
                LINE_CODE = #{lineCode,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lifesense.quality.domain.QaUser">
    update QUALITY.QA_USER
    set account = #{account,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      CODE = #{code,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      PROCESS_CODE = #{processCode,jdbcType=VARCHAR},
      PROCESS_SIGN = #{processSign,jdbcType=INTEGER},
      VALID = #{valid,jdbcType=INTEGER},
      CREATE_USER_ID = #{createUserId,jdbcType=BIGINT},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      line_code = #{lineCode,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>

    <select id="count" parameterType="com.lifesense.quality.domain.QaUser" resultType="java.lang.Integer">
        select count(*)
        from QUALITY.QA_USER
        <trim prefix="where" prefixOverrides="and | or">
            <if test="record.id != null">
                and ID = #{record.id,jdbcType=BIGINT}
            </if>
            <if test="record.account != null">
                and account = #{record.account,jdbcType=VARCHAR}
            </if>
            <if test="record.password != null">
                and PASSWORD = #{record.password,jdbcType=VARCHAR}
            </if>
            <if test="record.code != null">
                and CODE = #{record.code,jdbcType=VARCHAR}
            </if>
            <if test="record.name != null">
                and NAME = #{record.name,jdbcType=VARCHAR}
            </if>
            <if test="record.processCode != null">
                and PROCESS_CODE = #{record.processCode,jdbcType=VARCHAR}
            </if>
            <if test="record.processSign != null">
                and PROCESS_SIGN = #{record.processSign,jdbcType=INTEGER}
            </if>
            <if test="record.valid != null">
                and VALID = #{record.valid,jdbcType=INTEGER}
            </if>
            <if test="record.createUserId != null">
                and CREATE_USER_ID = #{record.createUserId,jdbcType=BIGINT}
            </if>
            <if test="record.createTime != null">
                and CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="record.modifyTime != null">
                and MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP}
            </if>
            <if test="record.lineCode != null">
                and LINE_CODE = #{record.lineCode,jdbcType=VARCHAR}
            </if>
        </trim>
    </select>

    <select id="select" parameterType="com.lifesense.quality.domain.QaUser" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from QUALITY.QA_USER
        <trim prefix="where" prefixOverrides="and | or">
            <if test="record.id != null">
                and ID = #{record.id,jdbcType=BIGINT}
            </if>
            <if test="record.account != null">
                and account = #{record.account,jdbcType=VARCHAR}
            </if>
            <if test="record.password != null">
                and PASSWORD = #{record.password,jdbcType=VARCHAR}
            </if>
            <if test="record.code != null">
                and CODE = #{record.code,jdbcType=VARCHAR}
            </if>
            <if test="record.name != null">
                and NAME = #{record.name,jdbcType=VARCHAR}
            </if>
            <if test="record.processCode != null">
                and PROCESS_CODE = #{record.processCode,jdbcType=VARCHAR}
            </if>
            <if test="record.processSign != null">
                and PROCESS_SIGN = #{record.processSign,jdbcType=INTEGER}
            </if>
            <if test="record.valid != null">
                and VALID = #{record.valid,jdbcType=INTEGER}
            </if>
            <if test="record.createUserId != null">
                and CREATE_USER_ID = #{record.createUserId,jdbcType=BIGINT}
            </if>
            <if test="record.createTime != null">
                and CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="record.modifyTime != null">
                and MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP}
            </if>
            <if test="record.lineCode != null">
                and LINE_CODE = #{record.lineCode,jdbcType=VARCHAR}
            </if>
        </trim>
    </select>
</mapper>