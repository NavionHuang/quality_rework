<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lifesense.quality.dao.IProductLineDao">
    <cache eviction="LRU" flushInterval="600000" size="1024" readOnly="true"/>
    <resultMap id="BaseResultMap" type="com.lifesense.quality.domain.ProductLine">
        <id column="ID" jdbcType="DECIMAL" property="id"/>
        <result column="CODE" jdbcType="VARCHAR" property="code"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="REMARK" jdbcType="VARCHAR" property="remark"/>
        <result column="VALID" jdbcType="DECIMAL" property="valid"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    ID, CODE, NAME, REMARK, VALID
  </sql>
    <select id="selectByExample" parameterType="com.lifesense.quality.criteria.ProductLineGeneratedCriteria"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from PRODUCT_LINE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from PRODUCT_LINE
        where ID = #{id,jdbcType=DECIMAL}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="Long">
    delete from PRODUCT_LINE
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
    <delete id="deleteByExample" parameterType="com.lifesense.quality.criteria.ProductLineGeneratedCriteria">
        delete from PRODUCT_LINE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.lifesense.quality.domain.ProductLine">
        <selectKey keyProperty="id" order="BEFORE" resultType="Long">
            SELECT PRODUCT_LINE_SEQ.NEXTVAL AS Id FROM DUAL
        </selectKey>
        insert into PRODUCT_LINE (ID,CODE, NAME, REMARK,
        VALID)
        values (#{id,jdbcType=BIGINT},#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
        #{valid,jdbcType=DECIMAL})
    </insert>
    <insert id="insertSelective" parameterType="com.lifesense.quality.domain.ProductLine">
        <selectKey keyProperty="id" order="BEFORE" resultType="Long">
            SELECT PRODUCT_LINE_SEQ.NEXTVAL AS Id FROM DUAL
        </selectKey>
        insert into PRODUCT_LINE
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="code != null">
                CODE,
            </if>
            <if test="name != null">
                NAME,
            </if>
            <if test="remark != null">
                REMARK,
            </if>
            <if test="valid != null">
                VALID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="valid != null">
                #{valid,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.lifesense.quality.criteria.ProductLineGeneratedCriteria"
            resultType="java.lang.Long">
        select count(*) from PRODUCT_LINE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update PRODUCT_LINE
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=DECIMAL},
            </if>
            <if test="record.code != null">
                CODE = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                NAME = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                REMARK = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.valid != null">
                VALID = #{record.valid,jdbcType=DECIMAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update PRODUCT_LINE
        set ID = #{record.id,jdbcType=DECIMAL},
        CODE = #{record.code,jdbcType=VARCHAR},
        NAME = #{record.name,jdbcType=VARCHAR},
        REMARK = #{record.remark,jdbcType=VARCHAR},
        VALID = #{record.valid,jdbcType=DECIMAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.lifesense.quality.domain.ProductLine">
        update PRODUCT_LINE
        <set>
            <if test="code != null">
                CODE = #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                REMARK = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="valid != null">
                VALID = #{valid,jdbcType=DECIMAL},
            </if>
        </set>
        where ID = #{id,jdbcType=DECIMAL}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lifesense.quality.domain.ProductLine">
    update PRODUCT_LINE
    set CODE = #{code,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      VALID = #{valid,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=DECIMAL}
  </update>

    <select id="count" parameterType="com.lifesense.quality.domain.ProductLine" resultType="java.lang.Integer">
        select count(*)
        from PRODUCT_LINE
        <trim prefix="where" prefixOverrides="and | or">
            <if test="record.id != null">
                and ID = #{record.id,jdbcType=DECIMAL}
            </if>
            <if test="record.code != null">
                and CODE = #{record.code,jdbcType=VARCHAR}
            </if>
            <if test="record.name != null">
                and NAME = #{record.name,jdbcType=VARCHAR}
            </if>
            <if test="record.remark != null">
                and REMARK = #{record.remark,jdbcType=VARCHAR}
            </if>
            <if test="record.valid != null">
                and VALID = #{record.valid,jdbcType=DECIMAL}
            </if>
        </trim>
    </select>

    <select id="select" parameterType="com.lifesense.quality.domain.ProductLine" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from PRODUCT_LINE
        <trim prefix="where" prefixOverrides="and | or">
            <if test="record.id != null">
                and ID = #{record.id,jdbcType=DECIMAL}
            </if>
            <if test="record.code != null">
                and CODE = #{record.code,jdbcType=VARCHAR}
            </if>
            <if test="record.name != null">
                and NAME = #{record.name,jdbcType=VARCHAR}
            </if>
            <if test="record.remark != null">
                and REMARK = #{record.remark,jdbcType=VARCHAR}
            </if>
            <if test="record.valid != null">
                and VALID = #{record.valid,jdbcType=DECIMAL}
            </if>
        </trim>
    </select>
</mapper>