<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lifesense.quality.dao.IProcessRecordDao">
    <resultMap id="BaseResultMap" type="com.lifesense.quality.domain.ProcessRecord">
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="PRODUCT_ID" jdbcType="BIGINT" property="productId"/>
        <result column="PRODUCT_LINE" jdbcType="VARCHAR" property="productLine"/>
        <result column="PROCESS_CODE" jdbcType="VARCHAR" property="processCode"/>
        <result column="STATUS" jdbcType="VARCHAR" property="status"/>
        <result column="USER_ID" jdbcType="BIGINT" property="userId"/>
        <result column="DESCRIPTION" jdbcType="VARCHAR" property="description"/>
        <result column="CONTENT_JSON" jdbcType="VARCHAR" property="contentJson"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    ID, product_id, PRODUCT_LINE, PROCESS_CODE, status, user_id, description, content_json, 
    CREATE_TIME
  </sql>
    <select id="selectByExample" parameterType="com.lifesense.quality.criteria.ProcessRecordGeneratedCriteria"
            resultType="com.lifesense.quality.domain.ProcessRecord">
        SELECT T1.ID as id, T1.product_id as productId, T1.PRODUCT_LINE as productLine,
        T1.PROCESS_CODE as processCode, T1.status as status, T1.user_id as userId, T1.DESCRIPTION as description,
        T1.content_json as contentJson, T1.CREATE_TIME as createTime,T2.NAME AS productLineName,T3.name as processName
        FROM (
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from PROCESS_RECORD
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        ) T1,PRODUCT_LINE T2,PROCESS T3
        WHERE T1.PROCESS_CODE=T3.CODE AND T1.PRODUCT_LINE = T2.CODE
    </select>
    <select id="selectByPrimaryKey" parameterType="Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from PROCESS_RECORD
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="Long">
    delete from PROCESS_RECORD
    where ID = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.lifesense.quality.criteria.ProcessRecordGeneratedCriteria">
        delete from PROCESS_RECORD
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.lifesense.quality.domain.ProcessRecord">
        <selectKey keyProperty="id" order="BEFORE" resultType="Long">
            SELECT PROCESS_RECORD_SEQ.NEXTVAL AS id FROM DUAL
        </selectKey>
        insert into PROCESS_RECORD (id,product_id, PRODUCT_LINE, PROCESS_CODE,
        status, user_id, description,
        content_json, CREATE_TIME)
        values (#{id,jdbcType=BIGINT},#{productId,jdbcType=BIGINT}, #{productLine,jdbcType=VARCHAR},
        #{processCode,jdbcType=VARCHAR},
        #{status,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR},
        #{contentJson,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.lifesense.quality.domain.ProcessRecord">
        <selectKey keyProperty="id" order="BEFORE" resultType="Long">
            SELECT PROCESS_RECORD_SEQ.NEXTVAL AS Id FROM DUAL
        </selectKey>
        insert into PROCESS_RECORD
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="productLine != null">
                PRODUCT_LINE,
            </if>
            <if test="processCode != null">
                PROCESS_CODE,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="contentJson != null">
                content_json,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=BIGINT},
            </if>
            <if test="productLine != null">
                #{productLine,jdbcType=VARCHAR},
            </if>
            <if test="processCode != null">
                #{processCode,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="contentJson != null">
                #{contentJson,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.lifesense.quality.criteria.ProcessRecordGeneratedCriteria"
            resultType="java.lang.Long">
        select count(*) from PROCESS_RECORD
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update PROCESS_RECORD
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.productId != null">
                product_id = #{record.productId,jdbcType=BIGINT},
            </if>
            <if test="record.productLine != null">
                PRODUCT_LINE = #{record.productLine,jdbcType=VARCHAR},
            </if>
            <if test="record.processCode != null">
                PROCESS_CODE = #{record.processCode,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.contentJson != null">
                content_json = #{record.contentJson,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update PROCESS_RECORD
        set ID = #{record.id,jdbcType=BIGINT},
        product_id = #{record.productId,jdbcType=BIGINT},
        PRODUCT_LINE = #{record.productLine,jdbcType=VARCHAR},
        PROCESS_CODE = #{record.processCode,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=BIGINT},
        description = #{record.description,jdbcType=VARCHAR},
        content_json = #{record.contentJson,jdbcType=VARCHAR},
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.lifesense.quality.domain.ProcessRecord">
        update PROCESS_RECORD
        <set>
            <if test="productId != null">
                product_id = #{productId,jdbcType=BIGINT},
            </if>
            <if test="productLine != null">
                PRODUCT_LINE = #{productLine,jdbcType=VARCHAR},
            </if>
            <if test="processCode != null">
                PROCESS_CODE = #{processCode,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="contentJson != null">
                content_json = #{contentJson,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lifesense.quality.domain.ProcessRecord">
    update PROCESS_RECORD
    set product_id = #{productId,jdbcType=BIGINT},
      PRODUCT_LINE = #{productLine,jdbcType=VARCHAR},
      PROCESS_CODE = #{processCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      content_json = #{contentJson,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>

    <select id="count" parameterType="com.lifesense.quality.domain.ProcessRecord" resultType="java.lang.Integer">
        select count(*)
        from Process_Record
        <trim prefix="where" prefixOverrides="and | or">
            <if test="record.id != null">
                and ID = #{record.id,jdbcType=BIGINT}
            </if>
            <if test="record.productId != null">
                and product_id = #{record.productId,jdbcType=BIGINT}
            </if>
            <if test="record.productLine != null">
                and PRODUCT_LINE = #{record.productLine,jdbcType=VARCHAR}
            </if>
            <if test="record.processCode != null">
                and PROCESS_CODE = #{record.processCode,jdbcType=VARCHAR}
            </if>
            <if test="record.status != null">
                and status = #{record.status,jdbcType=VARCHAR}
            </if>
            <if test="record.userId != null">
                and user_id = #{record.userId,jdbcType=BIGINT}
            </if>
            <if test="record.description != null">
                and description = #{record.description,jdbcType=VARCHAR}
            </if>
            <if test="record.contentJson != null">
                and content_json = #{record.contentJson,jdbcType=VARCHAR}
            </if>
            <if test="record.createTime != null">
                and CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
            </if>
        </trim>
    </select>

    <select id="select" parameterType="com.lifesense.quality.domain.ProcessRecord" resultType="com.lifesense.quality.domain.ProcessRecord">
        SELECT T1.ID as id, T1.product_id as productId, P.CPSN AS productSn, T1.PRODUCT_LINE as productLine,
        T1.PROCESS_CODE as processCode, T1.status as status, T1.user_id as userId,U.NAME AS userName, T1.DESCRIPTION as description,
        T1.content_json as contentJson, T1.CREATE_TIME as createTime,T2.NAME AS productLineName,T3.name as processName
        from Process_Record T1,PRODUCT P,PRODUCT_LINE T2,PROCESS T3,QA_USER U
        <trim prefix="where" prefixOverrides="and | or">
            AND  T1.PRODUCT_ID = P.ID   and T1.PROCESS_CODE=T3.CODE AND T1.PRODUCT_LINE = T2.CODE AND U.ID = T1.USER_ID AND T1.STATUS &lt;=0
            <if test="record.id != null">
                and T1.ID = #{record.id,jdbcType=BIGINT}
            </if>
            <if test="record.productId != null">
                and T1.product_id = #{record.productId,jdbcType=BIGINT}
            </if>
            <if test="record.productSn != null">
                and P.CPSN = #{record.productSn,jdbcType=VARCHAR}
            </if>
            <if test="record.productLine != null">
                and T1.PRODUCT_LINE = #{record.productLine,jdbcType=VARCHAR}
            </if>
            <if test="record.processCode != null">
                and T1.PROCESS_CODE = #{record.processCode,jdbcType=VARCHAR}
            </if>
            <if test="record.status != null">
                and T1.status = #{record.status,jdbcType=VARCHAR}
            </if>
            <if test="record.userId != null">
                and T1.user_id = #{record.userId,jdbcType=BIGINT}
            </if>
            <if test="record.description != null">
                and T1.description = #{record.description,jdbcType=VARCHAR}
            </if>
            <if test="record.contentJson != null">
                and T1.content_json = #{record.contentJson,jdbcType=VARCHAR}
            </if>
            <if test="record.createTime != null">
                and T1.CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
            </if>
        </trim>
        ORDER BY T1.CREATE_TIME DESC
    </select>
</mapper>